version: "3.9"

services:
  tailscale-deluge:
    image: tailscale/tailscale:latest # Image to be used
    container_name: tailscale-deluge # Name for local container management
    hostname: deluge # Name used within your Tailscale environment
    environment:
      - TS_AUTHKEY=$TS_KEY
      - TS_STATE_DIR=/var/lib/tailscale
      #- TS_SERVE_CONFIG=/config/serve.json # Tailsacale Serve configuration to expose the web interface on your local Tailnet - remove this line if not required
      - TS_USERSPACE=false
      - TS_EXTRA_ARGS=--exit-node=100.66.97.27 --ssh
      #- TS_EXTRA_ARGS=--reset
    volumes:
      - /docker_config/deluge:/config
      - /mnt:/data
      - /docker_config/incomplete-downloads:/incomplete-downloads
      - /docker_config/deluge-state/state:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun # Network configuration for Tailscale to work
    cap_add:
      - net_admin # Tailscale requirement
      - sys_module # Tailscale requirement
    ports:
      - 0.0.0.0:58846:58846 #optional
      - 0.0.0.0:3456:3456 # Todo App
      - 0.0.0.0:8112:8112
      - 0.0.0.0:6881:6881
      - 0.0.0.0:6881:6881/udp
    # If any DNS issues arise, use your preferred DNS provider by uncommenting the config below
    dns:
      - 1.1.1.1
    healthcheck:
      test: ["CMD", "tailscale", "status"] # Check if Tailscale is running
      interval: 1m # How often to perform the check
      timeout: 10s # Time to wait for the check to succeed
      retries: 3 # Number of retries before marking as unhealthy
      start_period: 10s # Time to wait before starting health checks
    restart: unless-stopped

  deluge:
    image: lscr.io/linuxserver/deluge:latest
    network_mode: service:tailscale-deluge
    container_name: deluge
    environment:
      - TZ=Australia/Brisbane
      - PUID=1005
      - PGID=1005
      - DELUGE_LOGLEVEL=error #optional
    volumes:
      - /docker_config/deluge:/config
      - /mnt:/data
      - /docker_config/incomplete-downloads:/incomplete-downloads
    restart: unless-stopped
    depends_on:
      tailscale-deluge:
        condition: service_healthy
        restart: true
    healthcheck:
      test: curl icanhazip.com && grep $ExitNodeIPAddress && exit 1 || echo "ERROR healthcheck failed" && exit 0
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s

  watchtower:
    image: containrrr/watchtower:latest
    network_mode: service:tailscale-deluge
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker_config/watchtower:/config
    command: --interval 86400 --debug
    restart: unless-stopped
    environment:
      - TZ=Australia/Brisbane
    depends_on:
      tailscale-deluge:
        condition: service_healthy
        restart: true

#  qbittorrent:
#    image: lscr.io/linuxserver/qbittorrent:latest
#    network_mode: service:tailscale-deluge
#    container_name: qbittorrent
#    environment:
#      - TZ=Australia/Brisbane
#      - PUID=1005
#      - PGID=1005
#      - WEBUI_PORT=8112
#      - TORRENTING_PORT=6881
#    volumes:
#      - /docker_config/deluge:/config
#      - /mnt:/data
#      - /docker_config/incomplete-downloads:/incomplete-downloads
#    restart: unless-stopped
#    depends_on:
#      tailscale-deluge:
#        condition: service_healthy
#        restart: true